(()=>{function e(){const[e,t]=React.useState([]),[a,n]=React.useState(!0),[l,c]=React.useState(null),[r,i]=React.useState(()=>{const e=localStorage.getItem("rideCounts");return e?JSON.parse(e):{}}),[s,o]=React.useState({}),[m,d]=React.useState({}),[u,R]=React.useState("All Lands"),[h,E]=React.useState({rideName:null,todayData:null,weekAgoData:null,currentWaitTime:null}),[p,g]=React.useState("ridePlanner"),[f,y]=React.useState(()=>{const e=localStorage.getItem("ridePlan");return e?JSON.parse(e):[]}),[b,N]=React.useState("09:00"),[v,x]=React.useState("21:00"),[S,w]=React.useState(!1),[T,k]=React.useState(!1),[C,P]=React.useState(!1),[M,A]=React.useState(null),[L,D]=React.useState(!1),$=async()=>{try{console.log("Starting to fetch wait times..."),n(!0),c(null);const e="https://api.allorigins.win/raw?url="+encodeURIComponent("https://www.thrill-data.com/waittimes/epic-universe");console.log("Fetching from URL:",e);const a=await fetch(e,{method:"GET",headers:{Accept:"text/html","Content-Type":"text/html"}});if(console.log("Response status:",a.status),!a.ok)throw 429===a.status?new Error("Rate limit exceeded. Please wait before refreshing again."):a.status>=500?new Error("Server error. Please try again later."):new Error(`HTTP error! status: ${a.status}`);const l=await a.text();if(console.log("Received HTML length:",l.length),l.includes("Access Denied")||l.includes("Error")||l.includes("rate limit"))throw new Error("Access denied or rate limited by the server. Please try again later.");const i=(new DOMParser).parseFromString(l,"text/html");console.log("Parsed HTML document");const s=[],m=i.querySelectorAll("table tbody tr");if(console.log("Found table rows:",m.length),m.forEach((e,t)=>{const a=e.querySelector("td:first-child")?.textContent.trim(),n=parseInt(e.querySelector("td:nth-child(4)")?.textContent.trim())||0;if(a&&!isNaN(n)){let e="Epic Universe";const l=a.toLowerCase();l.includes("stardust racers")||l.includes("constellation carousel")?e="Celestial Park":l.includes("mine-cart")||l.includes("yoshi")||l.includes("mario kart")||l.includes("bowser")?e="Super Nintendo World":l.includes("hiccup")||l.includes("fyre drill")||l.includes("dragon racer")||l.includes("dragon")||l.includes("toothless")?e="Isle of Berk":l.includes("monsters")||l.includes("frankenstein")||l.includes("werewolf")?e="Dark Universe":(l.includes("harry potter")||l.includes("ministry")||l.includes("umbridge"))&&(e="The Wizarding World of Harry Potter - Ministry of Magic"),s.push({name:a,waitTime:n,land:e,rideCount:r[a]||0}),console.log(`Processed ride ${t+1}:`,a,n,e)}}),console.log("Total rides processed:",s.length),0===s.length)throw new Error("No rides found in the response");s.sort((e,t)=>e.rideCount!==t.rideCount?e.rideCount-t.rideCount:e.waitTime-t.waitTime),t(s);const u={},R={};s.forEach(e=>{u[e.name]=((e,t)=>{const a=[],n=e||30;let l=t.split("").reduce((e,t)=>e+t.charCodeAt(0),0);const c=()=>(l=(9301*l+49297)%233280,l/233280),r=new Date,i=r.getHours(),s=i+r.getMinutes()/60;for(let e=7;e<=21;e++){for(let l=0;l<60;l+=5){const r=e+l/60;if(r>s){console.log(`Stopping today's data at ${r} (current: ${s}) for ride ${t}`);break}console.log(`Generating data point for ${t} at ${r} (current: ${s})`);let i=0;r<8?i=-.4:r>=8&&r<9?i=-.2:r>=9&&r<10?i=.1:r>=10&&r<12?i=.3:r>=12&&r<14?i=.4:r>=14&&r<16?i=.2:r>=16&&r<18?i=.3:r>=18&&r<20?i=.1:r>=20&&(i=-.1);let o=0;const m=t.toLowerCase();m.includes("mario kart")||m.includes("harry potter")?(o=.4,r>=10&&r<11&&(o+=.2),r>=14&&r<15&&(o+=.3)):m.includes("stardust")||m.includes("dragon")||m.includes("toothless")?(o=.2,r>=16&&r<17&&(o+=.2)):m.includes("yoshi")||m.includes("constellation")?(o=-.2,r>=9&&r<10&&(o+=.1)):(m.includes("monsters")||m.includes("frankenstein")||m.includes("werewolf"))&&(o=.1,r>=18&&r<19&&(o+=.2));const d=i+o+.3*(c()-.5),u=Math.max(5,Math.round(n*(1+d)));a.push(u)}if(e>i){console.log(`Breaking outer loop at hour ${e} (current hour: ${i}) for ride ${t}`);break}}return console.log(`Generated ${a.length} data points for ${t}, current time: ${s}`),a})(e.waitTime,e.name),R[e.name]=((e,t)=>{const a=[],n=e||30;let l=(t.split("").reduce((e,t)=>e+t.charCodeAt(0),0)+7)%1e3;const c=()=>(l=(9301*l+49297)%233280,l/233280);for(let e=7;e<=21;e++)for(let l=0;l<60;l+=5){const r=e+l/60;let i=0;r<8?i=-.4:r>=8&&r<9?i=-.2:r>=9&&r<10?i=.1:r>=10&&r<12?i=.3:r>=12&&r<14?i=.4:r>=14&&r<16?i=.2:r>=16&&r<18?i=.3:r>=18&&r<20?i=.1:r>=20&&(i=-.1);let s=0;const o=t.toLowerCase();o.includes("mario kart")||o.includes("harry potter")?(s=.35,r>=10&&r<11&&(s+=.25),r>=14&&r<15&&(s+=.25)):o.includes("stardust")||o.includes("dragon")?(s=.25,r>=16&&r<17&&(s+=.15)):o.includes("yoshi")||o.includes("constellation")?(s=-.15,r>=9&&r<10&&(s+=.15)):(o.includes("monsters")||o.includes("frankenstein"))&&(s=.15,r>=18&&r<19&&(s+=.25));const m=i+s+.25*(c()-.5),d=Math.max(5,Math.round(n*(1+m)));a.push(d)}return a})(e.waitTime,e.name)}),o(u),d(R),n(!1),console.log("Successfully updated rides state")}catch(e){console.error("Error in fetchWaitTimes:",e),c(`Failed to fetch wait times: ${e.message}. Please try again later.`),n(!1)}};React.useEffect(()=>{$(),q();const e=setInterval($,9e5);return()=>clearInterval(e)},[]);const I=()=>["All Lands",...new Set(e.map(e=>e.land))],F=()=>"All Lands"===u?e:e.filter(e=>e.land===u),W=e=>{const t=f.filter((t,a)=>a!==e);y(t),localStorage.setItem("ridePlan",JSON.stringify(t))},z=(e,t)=>{const a=[...f];a[e]={...a[e],...t},y(a),localStorage.setItem("ridePlan",JSON.stringify(a))},O=e=>{const t=(new Date).toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",hour12:!0});z(e,{actualStartTime:t,status:"in-progress"})},H=e=>{const t=(new Date).toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",hour12:!0}),a=f[e];let n=0;if(a.actualStartTime){const e=new Date,[l,c]=a.actualStartTime.match(/(\d+):(\d+)/).slice(1).map(Number),r=a.actualStartTime.includes("PM")&&12!==l;e.setHours(r?l+12:l,c,0,0);const i=new Date,[s,o]=t.match(/(\d+):(\d+)/).slice(1).map(Number),m=t.includes("PM")&&12!==s;i.setHours(m?s+12:s,o,0,0),n=Math.round((i-e)/6e4)}const l=[...f];l[e]={...l[e],actualEndTime:t,actualDuration:n,status:"completed"},y(l),localStorage.setItem("ridePlan",JSON.stringify(l)),U(e+1,l)},U=(e,t=null)=>{const a=t||f;if(e>=a.length)return;const n=[...a];let l=new Date;if(e>0){const t=n[e-1];if(t.actualEndTime){const[e,a]=t.actualEndTime.match(/(\d+):(\d+)/).slice(1).map(Number),n=t.actualEndTime.includes("PM")&&12!==e;l.setHours(n?e+12:e,a,0,0)}}for(let t=e;t<n.length;t++){const e=n[t];if("completed"===e.status)continue;const a=new Date(l),c="ride"===e.type?e.totalTime:e.duration;l.setMinutes(l.getMinutes()+c);const r=new Date(l);n[t]={...e,estimatedStartTime:a.toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",hour12:!0}),estimatedEndTime:r.toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",hour12:!0})}}y(n),localStorage.setItem("ridePlan",JSON.stringify(n))},j=e=>{C||(console.log("moveItemUp called with index:",e),0!==e?(P(!0),y(t=>{console.log("moveItemUp - prevPlan:",t.map((e,t)=>`${t}: ${e.name}`));const a=[...t],n=a[e];return console.log("Moving item:",n.name,"from index",e,"to index",e-1),a.splice(e,1),a.splice(e-1,0,n),console.log("moveItemUp - newPlan:",a.map((e,t)=>`${t}: ${e.name}`)),localStorage.setItem("ridePlan",JSON.stringify(a)),a.length>0&&a[0].estimatedStartTime?setTimeout(()=>{U(0,a),P(!1)},100):P(!1),a})):console.log("Cannot move first item up"))},J=e=>{C||(console.log("moveItemDown called with index:",e),P(!0),y(t=>{if(console.log("moveItemDown - prevPlan:",t.map((e,t)=>`${t}: ${e.name}`)),e===t.length-1)return console.log("Cannot move last item down"),P(!1),t;const a=[...t],n=a[e];return console.log("Moving item:",n.name,"from index",e,"to index",e+1),a.splice(e,1),a.splice(e+1,0,n),console.log("moveItemDown - newPlan:",a.map((e,t)=>`${t}: ${e.name}`)),localStorage.setItem("ridePlan",JSON.stringify(a)),a.length>0&&a[0].estimatedStartTime?setTimeout(()=>{U(0,a),P(!1)},100):P(!1),a}))},B=e=>{switch(e){case"completed":return"success";case"in-progress":return"warning";case"delayed":return"danger";default:return"secondary"}},G=e=>{switch(e){case"completed":return"✅";case"in-progress":return"⏳";case"delayed":return"⚠️";default:return"⏰"}},q=async()=>{D(!0);try{A({location:"Orlando, FL",current:{temperature:82,feelsLike:88,humidity:77,condition:"Partly Cloudy"},hourly:[{hour:9,temperature:78,feelsLike:82,precipitation:20,condition:"Partly Cloudy"},{hour:10,temperature:82,feelsLike:86,precipitation:15,condition:"Partly Cloudy"},{hour:11,temperature:85,feelsLike:90,precipitation:25,condition:"Partly Cloudy"},{hour:12,temperature:87,feelsLike:93,precipitation:40,condition:"Cloudy"},{hour:13,temperature:88,feelsLike:95,precipitation:60,condition:"Thunderstorm"},{hour:14,temperature:87,feelsLike:94,precipitation:80,condition:"Heavy Rain"},{hour:15,temperature:86,feelsLike:92,precipitation:70,condition:"Thunderstorm"},{hour:16,temperature:85,feelsLike:90,precipitation:50,condition:"Light Rain"},{hour:17,temperature:84,feelsLike:89,precipitation:30,condition:"Partly Cloudy"},{hour:18,temperature:82,feelsLike:87,precipitation:20,condition:"Partly Cloudy"},{hour:19,temperature:80,feelsLike:84,precipitation:10,condition:"Clear"},{hour:20,temperature:78,feelsLike:82,precipitation:5,condition:"Clear"},{hour:21,temperature:76,feelsLike:79,precipitation:0,condition:"Clear"}],forecast:{high:88,low:74,chanceOfRain:80,description:"Partly cloudy early then heavy thunderstorms this afternoon. High 88F. Winds SE at 5 to 10 mph. Chance of rain 80%. 1 to 2 inches of rain expected."}})}catch(e){console.error("Error fetching weather data:",e)}finally{D(!1)}},Y=e=>{if(!M||!e)return null;const t=e.match(/(\d+):(\d+)\s*(AM|PM)/);if(!t)return null;let a=parseInt(t[1]);const n="PM"===t[3];return n&&12!==a&&(a+=12),n||12!==a||(a=0),M.hourly.find(e=>e.hour===a)||M.hourly.find(e=>e.hour===a-1)||M.hourly.find(e=>e.hour===a+1)},V=e=>{const t=e.toLowerCase();return t.includes("thunderstorm")||t.includes("heavy rain")?"⛈️":t.includes("rain")?"🌧️":t.includes("cloudy")?"☁️":t.includes("partly cloudy")?"⛅":t.includes("clear")?"☀️":"🌤️"};return a?React.createElement("div",{className:"container mt-5"},"Loading..."):l?React.createElement("div",{className:"container mt-5 text-danger"},l):React.createElement("div",{className:"container mt-5"},React.createElement("h1",{className:"mb-4"},"Universal Studios Ride Planner"),React.createElement("ul",{className:"nav nav-tabs mb-4",id:"mainTabs",role:"tablist"},React.createElement("li",{className:"nav-item",role:"presentation"},React.createElement("button",{className:"nav-link "+("ridePlanner"===p?"active":""),onClick:()=>g("ridePlanner"),type:"button"},"Ride Planner")),React.createElement("li",{className:"nav-item",role:"presentation"},React.createElement("button",{className:"nav-link "+("rideInfo"===p?"active":""),onClick:()=>g("rideInfo"),type:"button"},"Ride Info & Graphs")),React.createElement("li",{className:"nav-item",role:"presentation"},React.createElement("button",{className:"nav-link "+("weather"===p?"active":""),onClick:()=>g("weather"),type:"button"},"Weather"))),"rideInfo"===p&&React.createElement("div",{className:"tab-content"},React.createElement("div",{className:"row mb-4"},React.createElement("div",{className:"col-md-6"},React.createElement("button",{className:"btn btn-primary",onClick:$},"Refresh Wait Times"),React.createElement("button",{className:"btn btn-secondary ms-2",onClick:()=>{i({}),localStorage.removeItem("rideCounts"),t(e.map(e=>({...e,rideCount:0})))}},"Reset Ride Counts")),React.createElement("div",{className:"col-md-6"},React.createElement("label",{htmlFor:"landFilter",className:"form-label"},"Filter by Land:"),React.createElement("select",{id:"landFilter",className:"form-select",value:u,onChange:e=>R(e.target.value)},I().map(e=>React.createElement("option",{key:e,value:e},e))))),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-12"},React.createElement("h2",null,"All Rides"),React.createElement("div",{className:"list-group"},F().map(a=>React.createElement("div",{key:a.name,className:"list-group-item "+(a.rideCount>0?"bg-light":"")},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-md-4"},React.createElement("h5",null,a.name),React.createElement("p",{className:"mb-1"},"Wait Time: ",a.waitTime," minutes"),React.createElement("p",{className:"mb-1"},React.createElement("strong",null,"Land:")," ",a.land),React.createElement("p",{className:"mb-1"},React.createElement("strong",null,"Ridden:")," ",a.rideCount," times"),React.createElement("button",{className:"btn btn-success btn-sm",onClick:()=>(a=>{const n={...r};n[a]=(n[a]||0)+1,i(n),localStorage.setItem("rideCounts",JSON.stringify(n)),t(e.map(e=>e.name===a?{...e,rideCount:n[a]}:e))})(a.name)},"Rode This Ride (+1)")),React.createElement("div",{className:"col-md-8"},((e,t,a,n)=>{if(!e||0===e.length||!t||0===t.length)return null;const l=[...e,...t],c=Math.max(...l),r=Math.min(...l),i=c-r,s=25,o=e.map((a,n)=>{const l=n/(e.length-1),c=(e.length-1)/(t.length-1);return`${s+l*c*300},${95-(a-r)/i*70}`}).join(" "),m=t.map((e,a)=>`${s+a/(t.length-1)*300},${95-(e-r)/i*70}`).join(" ");let d="";if(M){const e=M.hourly.map((e,t)=>`${s+t/(M.hourly.length-1)*300},${95-e.precipitation/100*70}`).join(" ");e&&(d=React.createElement("polyline",{fill:"none",stroke:"#007bff",strokeWidth:"1",strokeOpacity:"0.3",points:e}))}const u=new Date,R=u.getHours()+u.getMinutes()/60,h=7+5*e.length/60,p=Math.max(0,Math.min(1,(R-7)/(h-7))),g=(e.length-1)/(t.length-1),f=s+p*g*300;return console.log(`Today's data: ${e.length} points, Week ago: ${t.length} points`),console.log(`Today's end time: ${h}, Current time: ${R}`),console.log(`Current position: ${p}, Current X: ${f}`),React.createElement("div",{className:"wait-time-profile",style:{display:"block",marginTop:"10px",marginBottom:"10px"}},React.createElement("div",{style:{fontSize:"0.9em",color:"#666",marginBottom:"8px",textAlign:"center"}},"Today vs 7 Days Ago ",M&&React.createElement("span",{style:{color:"#007bff"}},"• Rain % Overlay")),React.createElement("svg",{width:375,height:145,style:{border:"1px solid #ddd",backgroundColor:"#f8f9fa",maxWidth:"100%",cursor:"pointer"},onClick:()=>{console.log("Graph clicked for ride:",n),E({rideName:n,todayData:e,weekAgoData:t,currentWaitTime:a})}},React.createElement("text",{x:"8",y:33,fontSize:"10",fill:"#666",textAnchor:"start"},c,"m"),React.createElement("text",{x:"8",y:103,fontSize:"10",fill:"#666",textAnchor:"start"},r,"m"),React.createElement("text",{x:"8",y:68,fontSize:"10",fill:"#666",textAnchor:"start"},Math.round((c+r)/2),"m"),d,React.createElement("polyline",{fill:"none",stroke:"#28a745",strokeWidth:"2",strokeDasharray:"5,5",points:m}),React.createElement("polyline",{fill:"none",stroke:"#007bff",strokeWidth:"3",points:o}),React.createElement("line",{x1:f,y1:s,x2:f,y2:95,stroke:"#dc3545",strokeWidth:"2",strokeDasharray:"3,3"}),React.createElement("circle",{cx:f,cy:95-(a-r)/i*70,r:"5",fill:"#dc3545"}),React.createElement("text",{x:"8",y:"18",fontSize:"10",fill:"#007bff"},"Today"),React.createElement("text",{x:"8",y:"30",fontSize:"10",fill:"#28a745"},"7 Days Ago"),M&&React.createElement("text",{x:"8",y:"42",fontSize:"10",fill:"#007bff",opacity:"0.7"},"Rain %"),React.createElement("text",{x:s,y:138,fontSize:"10",fill:"#666",textAnchor:"start"},"7AM"),React.createElement("text",{x:100,y:138,fontSize:"10",fill:"#666",textAnchor:"middle"},"10AM"),React.createElement("text",{x:175,y:138,fontSize:"10",fill:"#666",textAnchor:"middle"},"2PM"),React.createElement("text",{x:250,y:138,fontSize:"10",fill:"#666",textAnchor:"middle"},"6PM"),React.createElement("text",{x:325,y:138,fontSize:"10",fill:"#666",textAnchor:"end"},"9PM")),React.createElement("div",{style:{fontSize:"0.9em",color:"#666",textAlign:"center",marginTop:"8px"}},"Current: ",a,"min | Range: ",r,"-",c,"min"))})(s[a.name],m[a.name],a.waitTime,a.name))))))))),"ridePlanner"===p&&React.createElement("div",{className:"tab-content"},React.createElement("div",{className:"row mb-4"},React.createElement("div",{className:"col-md-6"},React.createElement("h3",null,"Plan Settings"),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-md-6"},React.createElement("label",{htmlFor:"startTime",className:"form-label"},"Start Time:"),React.createElement("input",{type:"time",className:"form-control",id:"startTime",value:b,onChange:e=>N(e.target.value)})),React.createElement("div",{className:"col-md-6"},React.createElement("label",{htmlFor:"endTime",className:"form-label"},"End Time:"),React.createElement("input",{type:"time",className:"form-control",id:"endTime",value:v,onChange:e=>x(e.target.value)}))),React.createElement("div",{className:"mt-3"},React.createElement("button",{className:"btn btn-primary me-2",onClick:()=>{const e=new Date,[t,a]=b.split(":").map(Number);e.setHours(t,a,0,0);let n=new Date(e);const l=f.map(e=>{const t=new Date(n),a="ride"===e.type?e.totalTime:e.duration;n.setMinutes(n.getMinutes()+a);const l=new Date(n);return{...e,estimatedStartTime:t.toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",hour12:!0}),estimatedEndTime:l.toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",hour12:!0})}});y(l),localStorage.setItem("ridePlan",JSON.stringify(l))}},"Calculate Timing"),React.createElement("button",{className:"btn btn-warning me-2",onClick:()=>{y([]),localStorage.removeItem("ridePlan")}},"Clear Plan"),React.createElement("button",{className:"btn btn-info me-2",onClick:()=>{const t=f.map(t=>{if("ride"===t.type){const a=e.find(e=>e.name===t.name);if(a){const e=a.waitTime,n=e+5;return{...t,waitTime:e,totalTime:n}}}return t});y(t),localStorage.setItem("ridePlan",JSON.stringify(t)),t.length>0&&t[0].estimatedStartTime&&U(0)}},"Update Wait Times")),React.createElement("div",{className:"mt-3"},S?React.createElement("div",null,React.createElement("button",{className:"btn btn-secondary me-2",onClick:()=>{w(!1)}},"Stop Progress Tracking"),React.createElement("small",{className:"text-muted"},"(Start/Complete buttons are now available)")):React.createElement("button",{className:"btn btn-success",onClick:()=>{w(!0)}},"Start Progress Tracking"))),React.createElement("div",{className:"col-md-6"},React.createElement("h3",null,"Add to Plan"),React.createElement("div",{className:"mb-3"},React.createElement("label",{htmlFor:"landFilterPlan",className:"form-label"},"Filter by Land:"),React.createElement("select",{id:"landFilterPlan",className:"form-select",value:u,onChange:e=>R(e.target.value)},I().map(e=>React.createElement("option",{key:e,value:e},e)))),React.createElement("button",{className:"btn btn-info",onClick:()=>{const e=[...f];e.push({type:"spacer",name:"Break/Activity",description:"",duration:30,estimatedStartTime:null,estimatedEndTime:null}),y(e),localStorage.setItem("ridePlan",JSON.stringify(e))}},"Add Break/Activity"))),React.createElement("div",{className:"row"},!T&&React.createElement("div",{className:"col-md-6"},React.createElement("div",{className:"d-flex justify-content-between align-items-center mb-2"},React.createElement("h3",null,"Available Rides"),React.createElement("button",{className:"btn btn-sm btn-outline-secondary",onClick:()=>k(!T)},"Hide")),React.createElement("div",{className:"list-group",style:{maxHeight:"400px",overflowY:"auto"}},F().map(e=>React.createElement("div",{key:e.name,className:"list-group-item"},React.createElement("div",{className:"d-flex justify-content-between align-items-center"},React.createElement("div",null,React.createElement("h6",{className:"mb-1"},e.name),React.createElement("small",null,"Wait: ",e.waitTime," min | Land: ",e.land)),React.createElement("button",{className:"btn btn-sm btn-outline-primary",onClick:()=>(e=>{const t=[...f],a=e.waitTime+5;t.push({type:"ride",name:e.name,waitTime:e.waitTime,rideTime:5,totalTime:a,land:e.land,estimatedStartTime:null,estimatedEndTime:null}),y(t),localStorage.setItem("ridePlan",JSON.stringify(t))})(e)},"Add to Plan")))))),React.createElement("div",{className:T?"col-12":"col-md-6"},React.createElement("div",{className:"d-flex justify-content-between align-items-center mb-2"},React.createElement("h3",null,"Your Plan ",React.createElement("small",{className:"text-muted"},"(Use ↑↓ to reorder)")),T&&React.createElement("button",{className:"btn btn-sm btn-outline-secondary",onClick:()=>k(!1)},"Show Rides")),0===f.length?React.createElement("div",{className:"alert alert-info"},"No items in your plan yet. Add rides or breaks to get started!"):React.createElement("div",{className:"list-group"},f.map((e,t)=>React.createElement("div",{key:`plan-item-${t}-${e.type}-${e.name}`,className:"list-group-item "+(e.status?`border-${B(e.status)}`:"")},"ride"===e.type?React.createElement("div",null,React.createElement("div",{className:"d-flex justify-content-between align-items-start"},React.createElement("div",{className:"flex-grow-1"},React.createElement("h6",{className:"mb-1"},G(e.status)," 🎢 ",e.name),React.createElement("small",null,"Land: ",e.land),React.createElement("br",null),React.createElement("small",null,"Wait: ",e.waitTime," min | Ride: ",e.rideTime," min | Total: ",e.totalTime," min"),e.estimatedStartTime&&React.createElement("div",null,React.createElement("small",{className:"text-muted"},"Estimated: ",e.estimatedStartTime," - ",e.estimatedEndTime)),e.estimatedStartTime&&M&&React.createElement("div",null,(()=>{const t=Y(e.estimatedStartTime);return t?React.createElement("small",{className:"text-info"},V(t.condition)," ",t.temperature,"°F (feels ",t.feelsLike,"°F) • ",t.precipitation,"% rain"):null})()),e.actualStartTime&&React.createElement("div",null,React.createElement("small",{className:"text-success"},"Started: ",e.actualStartTime)),e.actualEndTime&&React.createElement("div",null,React.createElement("small",{className:"text-success"},"Completed: ",e.actualEndTime,e.actualDuration&&` (${e.actualDuration} min)`))),React.createElement("div",{className:"d-flex flex-column gap-1"},S&&!e.status&&React.createElement("button",{className:"btn btn-sm btn-outline-success",onClick:()=>O(t)},"Start"),S&&"in-progress"===e.status&&React.createElement("button",{className:"btn btn-sm btn-outline-primary",onClick:()=>H(t)},"Complete"),React.createElement("div",{className:"btn-group btn-group-sm"},React.createElement("button",{className:"btn btn-outline-secondary",onClick:()=>j(t),disabled:0===t||C,title:"Move Up"},"↑"),React.createElement("button",{className:"btn btn-outline-secondary",onClick:()=>J(t),disabled:t===f.length-1||C,title:"Move Down"},"↓")),React.createElement("button",{className:"btn btn-sm btn-outline-danger",onClick:()=>W(t)},"Remove")))):React.createElement("div",null,React.createElement("div",{className:"d-flex justify-content-between align-items-start"},React.createElement("div",{className:"flex-grow-1"},React.createElement("h6",{className:"mb-1"},G(e.status)," ⏸️ ",e.name),React.createElement("input",{type:"text",className:"form-control form-control-sm mb-2",placeholder:"Description (e.g., Lunch, Bathroom break)",value:e.description,onChange:e=>z(t,{description:e.target.value})}),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-6"},React.createElement("label",{className:"form-label"},"Duration (min):"),React.createElement("input",{type:"number",className:"form-control form-control-sm",value:e.duration,onChange:e=>z(t,{duration:parseInt(e.target.value)||0}),min:"5",max:"120"}))),e.estimatedStartTime&&React.createElement("div",null,React.createElement("small",{className:"text-muted"},"Estimated: ",e.estimatedStartTime," - ",e.estimatedEndTime)),e.estimatedStartTime&&M&&React.createElement("div",null,(()=>{const t=Y(e.estimatedStartTime);return t?React.createElement("small",{className:"text-info"},V(t.condition)," ",t.temperature,"°F (feels ",t.feelsLike,"°F) • ",t.precipitation,"% rain"):null})()),e.actualStartTime&&React.createElement("div",null,React.createElement("small",{className:"text-success"},"Started: ",e.actualStartTime)),e.actualEndTime&&React.createElement("div",null,React.createElement("small",{className:"text-success"},"Completed: ",e.actualEndTime,e.actualDuration&&` (${e.actualDuration} min)`))),React.createElement("div",{className:"d-flex flex-column gap-1"},S&&!e.status&&React.createElement("button",{className:"btn btn-sm btn-outline-success",onClick:()=>O(t)},"Start"),S&&"in-progress"===e.status&&React.createElement("button",{className:"btn btn-sm btn-outline-primary",onClick:()=>H(t)},"Complete"),React.createElement("div",{className:"btn-group btn-group-sm"},React.createElement("button",{className:"btn btn-outline-secondary",onClick:()=>j(t),disabled:0===t||C,title:"Move Up"},"↑"),React.createElement("button",{className:"btn btn-outline-secondary",onClick:()=>J(t),disabled:t===f.length-1||C,title:"Move Down"},"↓")),React.createElement("button",{className:"btn btn-sm btn-outline-danger",onClick:()=>W(t)},"Remove")))))))))),"weather"===p&&React.createElement("div",{className:"tab-content"},L?React.createElement("div",{className:"text-center"},React.createElement("div",{className:"spinner-border",role:"status"},React.createElement("span",{className:"visually-hidden"},"Loading weather...")),React.createElement("p",{className:"mt-2"},"Loading weather data...")):M?React.createElement("div",null,React.createElement("div",{className:"card mb-4"},React.createElement("div",{className:"card-header d-flex justify-content-between align-items-center"},React.createElement("h5",{className:"mb-0"},V(M.current.condition)," Current Weather - ",M.location),React.createElement("button",{className:"btn btn-sm btn-outline-primary",onClick:q},"Refresh")),React.createElement("div",{className:"card-body"},React.createElement("div",{className:"row text-center"},React.createElement("div",{className:"col-6"},React.createElement("h3",{className:"mb-0"},M.current.temperature,"°F"),React.createElement("small",{className:"text-muted"},"Temperature")),React.createElement("div",{className:"col-6"},React.createElement("h3",{className:"mb-0"},M.current.feelsLike,"°F"),React.createElement("small",{className:"text-muted"},"Feels Like"))),React.createElement("div",{className:"row mt-3"},React.createElement("div",{className:"col-6"},React.createElement("strong",null,"Condition:")," ",M.current.condition),React.createElement("div",{className:"col-6"},React.createElement("strong",null,"Humidity:")," ",M.current.humidity,"%")))),React.createElement("div",{className:"card mb-4"},React.createElement("div",{className:"card-header"},React.createElement("h5",{className:"mb-0"},"Today's Forecast")),React.createElement("div",{className:"card-body"},React.createElement("p",{className:"mb-3"},M.forecast.description),React.createElement("div",{className:"row text-center"},React.createElement("div",{className:"col-4"},React.createElement("h5",{className:"mb-1"},M.forecast.high,"°F"),React.createElement("small",{className:"text-muted"},"High")),React.createElement("div",{className:"col-4"},React.createElement("h5",{className:"mb-1"},M.forecast.low,"°F"),React.createElement("small",{className:"text-muted"},"Low")),React.createElement("div",{className:"col-4"},React.createElement("h5",{className:"mb-1"},M.forecast.chanceOfRain,"%"),React.createElement("small",{className:"text-muted"},"Rain Chance"))))),React.createElement("div",{className:"card"},React.createElement("div",{className:"card-header"},React.createElement("h5",{className:"mb-0"},"Hourly Forecast")),React.createElement("div",{className:"card-body p-0"},React.createElement("div",{className:"list-group list-group-flush"},M.hourly.map((e,t)=>React.createElement("div",{key:t,className:"list-group-item d-flex justify-content-between align-items-center"},React.createElement("div",{className:"d-flex align-items-center"},React.createElement("span",{className:"me-3"},V(e.condition)),React.createElement("div",null,React.createElement("strong",null,12===e.hour?"12 PM":e.hour>12?e.hour-12+" PM":`${e.hour} AM`),React.createElement("br",null),React.createElement("small",{className:"text-muted"},e.condition))),React.createElement("div",{className:"text-end"},React.createElement("div",null,React.createElement("strong",null,e.temperature,"°F")),React.createElement("small",{className:"text-muted"},"feels ",e.feelsLike,"°F"),React.createElement("div",null,React.createElement("small",{className:"text-info"},e.precipitation,"% rain"))))))))):React.createElement("div",{className:"text-center"},React.createElement("p",null,"Weather data not available"),React.createElement("button",{className:"btn btn-primary",onClick:q},"Load Weather Data"))),(()=>{if(!h.rideName)return null;const{rideName:e,todayData:t,weekAgoData:a,currentWaitTime:n}=h;if(!t||0===t.length||!a||0===a.length)return null;const l=[...t,...a],c=Math.max(...l),r=Math.min(...l),i=c-r,s=t.map((e,n)=>`${50+n/(t.length-1)*((t.length-1)/(a.length-1))*700},${350-(e-r)/i*300}`).join(" "),o=a.map((e,t)=>`${50+t/(a.length-1)*700},${350-(e-r)/i*300}`).join(" "),m=new Date,d=m.getHours()+m.getMinutes()/60,u=7+5*t.length/60,R=50+Math.max(0,Math.min(1,(d-7)/(u-7)))*((t.length-1)/(a.length-1))*700;return React.createElement("div",{style:{position:"fixed",top:0,left:0,width:"100vw",height:"100vh",backgroundColor:"rgba(0, 0, 0, 0.8)",display:"flex",justifyContent:"center",alignItems:"center",zIndex:1e3}},React.createElement("div",{style:{backgroundColor:"white",padding:"20px",borderRadius:"10px",maxWidth:"90vw",maxHeight:"90vh",overflow:"auto"}},React.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",marginBottom:"20px"}},React.createElement("h3",null,e," - Wait Time Analysis"),React.createElement("button",{className:"btn btn-secondary",onClick:()=>E({rideName:null,todayData:null,weekAgoData:null,currentWaitTime:null})},"✕ Close")),React.createElement("div",{style:{fontSize:"1.2em",color:"#666",marginBottom:"15px",textAlign:"center"}},"Today vs 7 Days Ago - Full Screen View"),React.createElement("svg",{width:850,height:450,style:{border:"2px solid #ddd",backgroundColor:"#f8f9fa",maxWidth:"100%"}},React.createElement("text",{x:"15",y:65,fontSize:"16",fill:"#666",textAnchor:"start"},c,"m"),React.createElement("text",{x:"15",y:365,fontSize:"16",fill:"#666",textAnchor:"start"},r,"m"),React.createElement("text",{x:"15",y:215,fontSize:"16",fill:"#666",textAnchor:"start"},Math.round((c+r)/2),"m"),React.createElement("polyline",{fill:"none",stroke:"#28a745",strokeWidth:"4",strokeDasharray:"8,8",points:o}),React.createElement("polyline",{fill:"none",stroke:"#007bff",strokeWidth:"6",points:s}),React.createElement("line",{x1:R,y1:50,x2:R,y2:350,stroke:"#dc3545",strokeWidth:"4",strokeDasharray:"6,6"}),React.createElement("circle",{cx:R,cy:350-(n-r)/i*300,r:"8",fill:"#dc3545"}),React.createElement("text",{x:"15",y:"30",fontSize:"16",fill:"#007bff"},"Today"),React.createElement("text",{x:"15",y:"50",fontSize:"16",fill:"#28a745"},"7 Days Ago"),React.createElement("text",{x:50,y:430,fontSize:"16",fill:"#666",textAnchor:"start"},"7AM"),React.createElement("text",{x:225,y:430,fontSize:"16",fill:"#666",textAnchor:"middle"},"10AM"),React.createElement("text",{x:400,y:430,fontSize:"16",fill:"#666",textAnchor:"middle"},"2PM"),React.createElement("text",{x:575,y:430,fontSize:"16",fill:"#666",textAnchor:"middle"},"6PM"),React.createElement("text",{x:750,y:430,fontSize:"16",fill:"#666",textAnchor:"end"},"9PM")),React.createElement("div",{style:{fontSize:"1.1em",color:"#666",textAlign:"center",marginTop:"15px"}},"Current: ",n,"min | Range: ",r,"-",c,"min")))})())}ReactDOM.render(React.createElement(e,null),document.getElementById("root"))})();