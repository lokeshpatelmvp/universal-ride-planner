(()=>{function e(){const[e,t]=React.useState([]),[a,c]=React.useState(!0),[l,n]=React.useState(null),[s,r]=React.useState(()=>{const e=localStorage.getItem("completedRides");return e?new Set(JSON.parse(e)):new Set}),o=async()=>{try{console.log("Starting to fetch wait times..."),c(!0),n(null);const e="https://api.allorigins.win/raw?url="+encodeURIComponent("https://www.thrill-data.com/waittimes/epic-universe");console.log("Fetching from URL:",e);const a=await fetch(e,{method:"GET",headers:{Accept:"text/html","Content-Type":"text/html"}});if(console.log("Response status:",a.status),!a.ok)throw new Error(`HTTP error! status: ${a.status}`);const l=await a.text();if(console.log("Received HTML length:",l.length),l.includes("Access Denied")||l.includes("Error"))throw new Error("Access denied by the server");const r=(new DOMParser).parseFromString(l,"text/html");console.log("Parsed HTML document");const o=[],m=r.querySelectorAll("table tbody tr");if(console.log("Found table rows:",m.length),m.forEach((e,t)=>{const a=e.querySelector("td:first-child")?.textContent.trim(),c=e.querySelector("td:nth-child(2)")?.textContent.trim(),l=parseInt(e.querySelector("td:nth-child(4)")?.textContent.trim())||0;a&&!isNaN(l)&&(o.push({name:a,waitTime:l,heightReq:c,completed:s.has(a)}),console.log(`Processed ride ${t+1}:`,a,l))}),console.log("Total rides processed:",o.length),0===o.length)throw new Error("No rides found in the response");o.sort((e,t)=>e.waitTime-t.waitTime),t(o),c(!1),console.log("Successfully updated rides state")}catch(e){console.error("Error in fetchWaitTimes:",e),n(`Failed to fetch wait times: ${e.message}. Please try again later.`),c(!1)}},m=a=>{const c=new Set(s);c.add(a),r(c),localStorage.setItem("completedRides",JSON.stringify(Array.from(c))),t(e.map(e=>e.name===a?{...e,completed:!0}:e))};return React.useEffect(()=>{o();const e=setInterval(o,6e4);return()=>clearInterval(e)},[]),a?React.createElement("div",{className:"container mt-5"},"Loading..."):l?React.createElement("div",{className:"container mt-5 text-danger"},l):React.createElement("div",{className:"container mt-5"},React.createElement("h1",{className:"mb-4"},"Universal Studios Ride Planner"),React.createElement("div",{className:"row mb-4"},React.createElement("div",{className:"col"},React.createElement("button",{className:"btn btn-primary",onClick:o},"Refresh Wait Times"),React.createElement("button",{className:"btn btn-secondary ms-2",onClick:()=>{r(new Set),localStorage.removeItem("completedRides"),t(e.map(e=>({...e,completed:!1})))}},"Reset Completed Rides"))),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-md-6"},React.createElement("h2",null,"Next Best Rides"),React.createElement("div",{className:"list-group"},e.filter(e=>!e.completed).slice(0,3).map(e=>React.createElement("div",{key:e.name,className:"list-group-item"},React.createElement("h5",null,e.name),React.createElement("p",null,"Wait Time: ",e.waitTime," minutes"),React.createElement("p",null,"Height Requirement: ",e.heightReq),React.createElement("button",{className:"btn btn-success",onClick:()=>m(e.name)},"Mark as Complete"))))),React.createElement("div",{className:"col-md-6"},React.createElement("h2",null,"All Rides"),React.createElement("div",{className:"list-group"},e.map(e=>React.createElement("div",{key:e.name,className:"list-group-item "+(e.completed?"bg-light":"")},React.createElement("h5",null,e.name),React.createElement("p",null,"Wait Time: ",e.waitTime," minutes"),React.createElement("p",null,"Height Requirement: ",e.heightReq),!e.completed&&React.createElement("button",{className:"btn btn-success",onClick:()=>m(e.name)},"Mark as Complete")))))))}ReactDOM.render(React.createElement(e,null),document.getElementById("root"))})();